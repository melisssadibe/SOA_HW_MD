services:
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data

  users-service:
    build: ./users-service
    depends_on:
      - postgres-db
    environment:
      - DATABASE_URL=postgresql://user_admin:password@postgres-db:5432/user_db

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8000:5000"
    depends_on:
      - users-service
      - kafka
    environment:
      - USER_SERVICE_URL=http://user_service:5001

  postgres-db-posts:
    image: postgres:15
    container_name: postgres-db-posts
    restart: always
    environment:
      POSTGRES_DB: posts_db
      POSTGRES_USER: user_admin
      POSTGRES_PASSWORD: password
    volumes:
      - data-post:/var/lib/postgresql/data

  posts-service:
    build:
      context: .
      dockerfile: posts-service/Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - postgres-db-posts

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP интерфейс
      - "9000:9000"  # Native client
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1

  stats-service:
    build:
      context: ./stats-service
    depends_on:
      - kafka
      - clickhouse
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "50052:50052"  # gRPC API

volumes:
  data:
  data-post:
  clickhouse-data:
